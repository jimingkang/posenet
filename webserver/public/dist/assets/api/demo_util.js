function t(t,e,n,r,o,a,i){try{var u=t[a](i);var s=u.value}catch(d){n(d);return}if(u.done){e(s)}else{Promise.resolve(s).then(r,o)}}function e(e){return function(){var n=this,r=arguments;return new Promise(function(o,a){var i=e.apply(n,r);function u(e){t(i,o,a,u,s,"next",e)}function s(e){t(i,o,a,u,s,"throw",e)}u(undefined)})}}import*as n from"@tensorflow/tfjs";import*as r from"@tensorflow-models/posenet";var o="aqua";var a="red";var i=2;export var tryResNetButtonName="tryResNetButton";export var tryResNetButtonText="[New] Try ResNet50";var u="width:100%;text-decoration:underline;";var s="background:#e61d5f;";function d(){return/Android/i.test(navigator.userAgent)}function f(){return/iPhone|iPad|iPod/i.test(navigator.userAgent)}export function isMobile(){return d()||f()}function l(t,e,n){if(n===void 0){n=""}var r=document.getElementsByClassName("property-name");for(var o=0;o<r.length;o++){var a=r[o].textContent||r[o].innerText;if(a==t){r[o].parentNode.parentNode.style=e;if(n!==""){r[o].style=n}}}}export function updateTryResNetButtonDatGuiCss(){l(tryResNetButtonText,s,u)}export function toggleLoadingUI(t,e,n){if(e===void 0){e="loading"}if(n===void 0){n="main"}if(t){document.getElementById(e).style.display="block";document.getElementById(n).style.display="none"}else{document.getElementById(e).style.display="none";document.getElementById(n).style.display="block"}}function c(t){var e=t.y,n=t.x;return[e,n]}export function drawPoint(t,e,n,r,o){t.beginPath();t.arc(n,e,r,0,2*Math.PI);t.fillStyle=o;t.fill()}export function drawSegment(t,e,n,r,o){var a=t[0],u=t[1];var s=e[0],d=e[1];o.beginPath();o.moveTo(u*r,a*r);o.lineTo(d*r,s*r);o.lineWidth=i;o.strokeStyle=n;o.stroke()}export function drawSkeleton(t,e,n,a){if(a===void 0){a=1}var i=r.getAdjacentKeyPoints(t,e);i.forEach(function(t){drawSegment(c(t[0].position),c(t[1].position),o,a,n)})}export function drawKeypoints(t,e,n,r){if(r===void 0){r=1}for(var a=0;a<t.length;a++){var i=t[a];if(i.score<e){continue}var u=i.position,s=u.y,d=u.x;drawPoint(n,s*r,d*r,3,o)}}export function drawBoundingBox(t,e){var n=r.getBoundingBox(t);e.rect(n.minX,n.minY,n.maxX-n.minX,n.maxY-n.minY);e.strokeStyle=a;e.stroke()}export function renderToCanvas(t,e){return v.apply(this,arguments)}function v(){v=e(regeneratorRuntime.mark(function t(e,n){var r,o,a,i,u,s,d,f;return regeneratorRuntime.wrap(function t(l){while(1){switch(l.prev=l.next){case 0:r=e.shape,o=r[0],a=r[1];i=new ImageData(a,o);l.next=4;return e.data();case 4:u=l.sent;for(s=0;s<o*a;++s){d=s*4;f=s*3;i.data[d+0]=u[f+0];i.data[d+1]=u[f+1];i.data[d+2]=u[f+2];i.data[d+3]=255}n.putImageData(i,0,0);case 7:case"end":return l.stop()}}},t)}));return v.apply(this,arguments)}export function renderImageToCanvas(t,e,n){n.width=e[0];n.height=e[1];var r=n.getContext("2d");r.drawImage(t,0,0)}export function drawHeatMapValues(t,e,r){var a=r.getContext("2d");var i=5;var u=t.mul(n.scalar(e,"int32"));p(a,u,i,o)}function p(t,e,n,r){var o=e.buffer().values;for(var a=0;a<o.length;a+=2){var i=o[a];var u=o[a+1];if(u!==0&&i!==0){t.beginPath();t.arc(u,i,n,0,2*Math.PI);t.fillStyle=r;t.fill()}}}